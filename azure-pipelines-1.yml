# PHP as Linux Web App on Azure
# Build, package and deploy your PHP project to Azure Linux Web App.
# Docs: https://docs.microsoft.com/azure/devops/pipelines/languages/php

trigger:
- main

variables:
  azureSubscription: 'f1dea7e9-362d-4b78-a275-072c0731ee72'
  webAppName: 'imus-it-ticket-system'
  environmentName: 'imus-it-ticket-system'
  rootFolder: $(System.DefaultWorkingDirectory)

stages:
- stage: Build
  displayName: 'Build Stage'
  variables:
    phpVersion: '8.2'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    pool:
      name: my-personal-computer
    steps:
    - script: |
        sudo update-alternatives --set php /usr/bin/php$(phpVersion)
        sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
        sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
        sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
        sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
        php -v
      workingDirectory: $(rootFolder)
      displayName: 'Set PHP version to $(phpVersion)'

    - script: |
        sudo apt-get update
        sudo apt-get install -y php$(phpVersion)-gd
        php -m | grep gd
      workingDirectory: $(rootFolder)
      displayName: 'Install GD PHP extension'

    - script: composer install --no-interaction --prefer-dist --optimize-autoloader
      workingDirectory: $(rootFolder)
      displayName: 'Composer install'

    - task: ArchiveFiles@2
      displayName: 'Archive project files'
      inputs:
        rootFolderOrFile: '$(rootFolder)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload build artifact'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    displayName: 'Deployment Job'
    pool:
      name: my-personal-computer
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App: imus-it-ticket-system'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              appType: webAppLinux
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
